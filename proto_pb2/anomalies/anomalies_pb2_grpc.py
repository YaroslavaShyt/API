# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto_pb2.anomalies import anomalies_pb2 as proto__pb2_dot_anomalies_dot_anomalies__pb2


class AnomaliesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRecordAnomalies = channel.unary_unary(
                '/AnomaliesService/CreateRecordAnomalies',
                request_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.CreateAnomaliesRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.CreateAnomaliesResponse.FromString,
                )
        self.ReadRecordAnomalies = channel.unary_unary(
                '/AnomaliesService/ReadRecordAnomalies',
                request_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.ReadAnomaliesRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.ReadAnomaliesResponse.FromString,
                )
        self.UpdateRecordAnomalies = channel.unary_unary(
                '/AnomaliesService/UpdateRecordAnomalies',
                request_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.UpdateAnomaliesRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.UpdateAnomaliesResponse.FromString,
                )
        self.DeleteRecordAnomalies = channel.unary_unary(
                '/AnomaliesService/DeleteRecordAnomalies',
                request_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.DeleteAnomaliesRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.DeleteAnomaliesResponse.FromString,
                )


class AnomaliesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRecordAnomalies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadRecordAnomalies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRecordAnomalies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRecordAnomalies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnomaliesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRecordAnomalies': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRecordAnomalies,
                    request_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.CreateAnomaliesRequest.FromString,
                    response_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.CreateAnomaliesResponse.SerializeToString,
            ),
            'ReadRecordAnomalies': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadRecordAnomalies,
                    request_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.ReadAnomaliesRequest.FromString,
                    response_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.ReadAnomaliesResponse.SerializeToString,
            ),
            'UpdateRecordAnomalies': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRecordAnomalies,
                    request_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.UpdateAnomaliesRequest.FromString,
                    response_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.UpdateAnomaliesResponse.SerializeToString,
            ),
            'DeleteRecordAnomalies': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRecordAnomalies,
                    request_deserializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.DeleteAnomaliesRequest.FromString,
                    response_serializer=proto__pb2_dot_anomalies_dot_anomalies__pb2.DeleteAnomaliesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AnomaliesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AnomaliesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRecordAnomalies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AnomaliesService/CreateRecordAnomalies',
            proto__pb2_dot_anomalies_dot_anomalies__pb2.CreateAnomaliesRequest.SerializeToString,
            proto__pb2_dot_anomalies_dot_anomalies__pb2.CreateAnomaliesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadRecordAnomalies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AnomaliesService/ReadRecordAnomalies',
            proto__pb2_dot_anomalies_dot_anomalies__pb2.ReadAnomaliesRequest.SerializeToString,
            proto__pb2_dot_anomalies_dot_anomalies__pb2.ReadAnomaliesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRecordAnomalies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AnomaliesService/UpdateRecordAnomalies',
            proto__pb2_dot_anomalies_dot_anomalies__pb2.UpdateAnomaliesRequest.SerializeToString,
            proto__pb2_dot_anomalies_dot_anomalies__pb2.UpdateAnomaliesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRecordAnomalies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AnomaliesService/DeleteRecordAnomalies',
            proto__pb2_dot_anomalies_dot_anomalies__pb2.DeleteAnomaliesRequest.SerializeToString,
            proto__pb2_dot_anomalies_dot_anomalies__pb2.DeleteAnomaliesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
