# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto_pb2.links import links_pb2 as proto__pb2_dot_links_dot_links__pb2


class LinksServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRecordLinks = channel.unary_unary(
                '/LinksService/CreateRecordLinks',
                request_serializer=proto__pb2_dot_links_dot_links__pb2.CreateLinksRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_links_dot_links__pb2.CreateLinksResponse.FromString,
                )
        self.ReadRecordLinks = channel.unary_unary(
                '/LinksService/ReadRecordLinks',
                request_serializer=proto__pb2_dot_links_dot_links__pb2.ReadLinksRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_links_dot_links__pb2.ReadLinksResponse.FromString,
                )
        self.UpdateRecordLinks = channel.unary_unary(
                '/LinksService/UpdateRecordLinks',
                request_serializer=proto__pb2_dot_links_dot_links__pb2.UpdateLinksRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_links_dot_links__pb2.UpdateLinksResponse.FromString,
                )
        self.DeleteRecordLinks = channel.unary_unary(
                '/LinksService/DeleteRecordLinks',
                request_serializer=proto__pb2_dot_links_dot_links__pb2.DeleteLinksRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_links_dot_links__pb2.DeleteLinksResponse.FromString,
                )


class LinksServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRecordLinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadRecordLinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRecordLinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRecordLinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LinksServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRecordLinks': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRecordLinks,
                    request_deserializer=proto__pb2_dot_links_dot_links__pb2.CreateLinksRequest.FromString,
                    response_serializer=proto__pb2_dot_links_dot_links__pb2.CreateLinksResponse.SerializeToString,
            ),
            'ReadRecordLinks': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadRecordLinks,
                    request_deserializer=proto__pb2_dot_links_dot_links__pb2.ReadLinksRequest.FromString,
                    response_serializer=proto__pb2_dot_links_dot_links__pb2.ReadLinksResponse.SerializeToString,
            ),
            'UpdateRecordLinks': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRecordLinks,
                    request_deserializer=proto__pb2_dot_links_dot_links__pb2.UpdateLinksRequest.FromString,
                    response_serializer=proto__pb2_dot_links_dot_links__pb2.UpdateLinksResponse.SerializeToString,
            ),
            'DeleteRecordLinks': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRecordLinks,
                    request_deserializer=proto__pb2_dot_links_dot_links__pb2.DeleteLinksRequest.FromString,
                    response_serializer=proto__pb2_dot_links_dot_links__pb2.DeleteLinksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LinksService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LinksService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRecordLinks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinksService/CreateRecordLinks',
            proto__pb2_dot_links_dot_links__pb2.CreateLinksRequest.SerializeToString,
            proto__pb2_dot_links_dot_links__pb2.CreateLinksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadRecordLinks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinksService/ReadRecordLinks',
            proto__pb2_dot_links_dot_links__pb2.ReadLinksRequest.SerializeToString,
            proto__pb2_dot_links_dot_links__pb2.ReadLinksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRecordLinks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinksService/UpdateRecordLinks',
            proto__pb2_dot_links_dot_links__pb2.UpdateLinksRequest.SerializeToString,
            proto__pb2_dot_links_dot_links__pb2.UpdateLinksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRecordLinks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LinksService/DeleteRecordLinks',
            proto__pb2_dot_links_dot_links__pb2.DeleteLinksRequest.SerializeToString,
            proto__pb2_dot_links_dot_links__pb2.DeleteLinksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
