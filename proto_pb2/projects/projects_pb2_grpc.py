# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto_pb2.projects import projects_pb2 as proto__pb2_dot_projects_dot_projects__pb2


class ProjectsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRecordProjects = channel.unary_unary(
                '/ProjectsService/CreateRecordProjects',
                request_serializer=proto__pb2_dot_projects_dot_projects__pb2.CreateProjectsRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_projects_dot_projects__pb2.CreateProjectsResponse.FromString,
                )
        self.ReadRecordProjects = channel.unary_unary(
                '/ProjectsService/ReadRecordProjects',
                request_serializer=proto__pb2_dot_projects_dot_projects__pb2.ReadProjectsRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_projects_dot_projects__pb2.ReadProjectsResponse.FromString,
                )
        self.UpdateRecordProjects = channel.unary_unary(
                '/ProjectsService/UpdateRecordProjects',
                request_serializer=proto__pb2_dot_projects_dot_projects__pb2.UpdateProjectsRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_projects_dot_projects__pb2.UpdateProjectsResponse.FromString,
                )
        self.DeleteRecordProjects = channel.unary_unary(
                '/ProjectsService/DeleteRecordProjects',
                request_serializer=proto__pb2_dot_projects_dot_projects__pb2.DeleteProjectsRequest.SerializeToString,
                response_deserializer=proto__pb2_dot_projects_dot_projects__pb2.DeleteProjectsResponse.FromString,
                )


class ProjectsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRecordProjects(self, request, context):
        """PROJECTS
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadRecordProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRecordProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRecordProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRecordProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRecordProjects,
                    request_deserializer=proto__pb2_dot_projects_dot_projects__pb2.CreateProjectsRequest.FromString,
                    response_serializer=proto__pb2_dot_projects_dot_projects__pb2.CreateProjectsResponse.SerializeToString,
            ),
            'ReadRecordProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadRecordProjects,
                    request_deserializer=proto__pb2_dot_projects_dot_projects__pb2.ReadProjectsRequest.FromString,
                    response_serializer=proto__pb2_dot_projects_dot_projects__pb2.ReadProjectsResponse.SerializeToString,
            ),
            'UpdateRecordProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRecordProjects,
                    request_deserializer=proto__pb2_dot_projects_dot_projects__pb2.UpdateProjectsRequest.FromString,
                    response_serializer=proto__pb2_dot_projects_dot_projects__pb2.UpdateProjectsResponse.SerializeToString,
            ),
            'DeleteRecordProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRecordProjects,
                    request_deserializer=proto__pb2_dot_projects_dot_projects__pb2.DeleteProjectsRequest.FromString,
                    response_serializer=proto__pb2_dot_projects_dot_projects__pb2.DeleteProjectsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProjectsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProjectsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRecordProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProjectsService/CreateRecordProjects',
            proto__pb2_dot_projects_dot_projects__pb2.CreateProjectsRequest.SerializeToString,
            proto__pb2_dot_projects_dot_projects__pb2.CreateProjectsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadRecordProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProjectsService/ReadRecordProjects',
            proto__pb2_dot_projects_dot_projects__pb2.ReadProjectsRequest.SerializeToString,
            proto__pb2_dot_projects_dot_projects__pb2.ReadProjectsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRecordProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProjectsService/UpdateRecordProjects',
            proto__pb2_dot_projects_dot_projects__pb2.UpdateProjectsRequest.SerializeToString,
            proto__pb2_dot_projects_dot_projects__pb2.UpdateProjectsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRecordProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProjectsService/DeleteRecordProjects',
            proto__pb2_dot_projects_dot_projects__pb2.DeleteProjectsRequest.SerializeToString,
            proto__pb2_dot_projects_dot_projects__pb2.DeleteProjectsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
