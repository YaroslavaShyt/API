syntax = "proto3";

service AnomaliesService{
  rpc CreateRecordAnomalies (CreateAnomaliesRequest) returns (CreateAnomaliesResponse);
  rpc ReadRecordAnomalies (ReadAnomaliesRequest) returns (ReadAnomaliesResponse);
  rpc UpdateRecordAnomalies(UpdateAnomaliesRequest) returns (UpdateAnomaliesResponse);
  rpc DeleteRecordAnomalies (DeleteAnomaliesRequest) returns (DeleteAnomaliesResponse);
}

message CreateAnomaliesRequest {
  optional int64 projectId = 1;
  optional bytes data = 2;
  optional int32 status = 3;
  optional string name = 4;
  optional string tags = 5;
  optional string description = 6;
  optional int64 radius = 7;
  optional int64 scale = 8;
  optional int64 processedByMemberId = 9;
}

message CreateAnomaliesResponse {
  bool success = 1;
  repeated string message = 2;
}


message ReadAnomaliesRequest {
  optional string id = 1;         // "1,2,3," і парсити по комі при отриманні
  optional string projectId = 2;  // "1,2,3," і парсити по комі при отриманні
  optional bytes data = 3;       
  optional string timestamp = 4; // "01.10.2023," і парсити по комі при отриманні
  optional string status = 5;     // "0,1" 
  optional string name = 6;      // "name1, name2, name3"
  optional string tags = 7;      // "tag1, tag2, tag3"
  optional string description = 8; // ціла стрінга
  optional string radius = 9;      // "1, 2, 3"
  optional string scale = 10;      // "1, 2, 3"
  optional string processedByMemberId = 11; // "1, 2, 3"
}

message ReadAnomaliesResponse {
  bool success = 1;
  repeated string message = 2;
  repeated AnomaliesObject data = 3;
}

message AnomaliesObject{
  int64 id = 1;
  int64 projectId = 2;
  bytes data = 3;
  string timestamp = 4;
  int32 status = 5;
  string name = 6;
  string tags = 7;
  string description = 8;
  int64 radius = 9;
  int64 scale = 10;
  int64 processedByMemberId = 11;
}

// усе як стрінг через кому, буде парситись - "1, 2, 3"
message UpdateAnomaliesRequest {
  optional string id = 1;
  optional string projectId = 2;
  optional bytes data = 3;
  optional string timestamp = 4;
  optional string status = 5;
  optional string name = 6;
  optional string tags = 7;
  optional string description = 8;
  optional string radius = 9;
  optional string scale = 10;
  optional string processedByMemberId = 11;
  optional UpdateAnomaliesObject update_data = 12;
}

message UpdateAnomaliesObject{
  int64 projectId = 1;
  bytes data = 2;
  string timestamp = 3;
  int32 status = 4;
  string name = 5;
  string tags = 6;
  string description = 7;
  int64 radius = 8;
  int64 scale = 9;
  int64 processedByMemberId = 10;
}

message UpdateAnomaliesResponse {
  bool success = 1;
  repeated string message = 2;
}

message DeleteAnomaliesRequest {
  optional string id = 1;
  optional string projectId = 2;
  optional bytes data = 3;
  optional string timestamp = 4;
  optional string status = 5;
  optional string name = 6;
  optional string tags = 7;
  optional string description = 8;
  optional string radius = 9;
  optional string scale = 10;
  optional string processedByMemberId = 11;
}

message DeleteAnomaliesResponse {  
  bool success = 1;
  repeated string message = 2;
}